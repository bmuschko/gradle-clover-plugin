sourceSets {
    functionalTest {
        groovy.srcDir file('src/functTest/groovy')
        resources.srcDir file('src/functTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task functionalTest(type: Test) {
    description = 'Runs the functional tests.'
    group = 'verification'
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
    mustRunAfter test, integrationTest
    check.dependsOn it
    
    // See gradle.properties
    systemProperty 'gradleCurrentVersion', gradleCurrentVersion
    systemProperty 'gradleTestingVersions', gradleTestingVersions
    
    reports {
        html.outputLocation = project.file("$buildDir/reports/tests/functionalTest")
        junitXml.outputLocation = project.file("$buildDir/reports/tests/functionalTestXml")
    }
}

dependencies {
    functionalTestImplementation 'commons-lang:commons-lang:2.6'
}

gradlePlugin {
    testSourceSets sourceSets.functionalTest
}

idea.module {
    sourceSets.functionalTest.allSource.srcDirs.each {
        testSourceDirs += it
    }

    scopes.TEST.plus += [configurations.functionalTestRuntimeClasspath]
}

eclipse {
    classpath {
        plusConfigurations += [ configurations.functionalTestRuntimeClasspath ]
        
        //customizing the classes output directory:
        defaultOutputDir = file('build-eclipse')
    
        //default settings for downloading sources and Javadoc:
        downloadSources = true
        downloadJavadoc = true
    }
}
