buildscript {
    repositories {
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:2.11.1"
        classpath "org.grails.plugins:hibernate5:6.0.0"
    }
}

plugins {
    id 'com.bmuschko.clover'
}

apply from: '../deps.gradle'

version "0.1"
group "issue75"

apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"org.grails.grails-gsp"
apply plugin:"asset-pipeline"

repositories {
    maven { url "https://repo.grails.org/grails/core" }
}

dependencyManagement {
    imports {
        mavenBom "org.grails:grails-bom:$grailsVersion"
    }
    applyMavenExclusions false
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-core"
    implementation "org.grails:grails-dependencies"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:hibernate5"
    console "org.grails:grails-console"
    profile "org.grails.profiles:web"
    implementation "org.hibernate:hibernate-core:5.1.1.Final"
    implementation "org.hibernate:hibernate-ehcache:5.1.1.Final"
    provided "org.codehaus.groovy:groovy-ant"
    runtime "com.bertramlabs.plugins:asset-pipeline-grails:2.11.1"
    runtime "com.h2database:h2"
    testImplementation "org.grails:grails-plugin-testing"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.grails:grails-test-mixins:3.3.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-htmlunit-driver:2.47.1"
    testRuntimeOnly "net.sourceforge.htmlunit:htmlunit:2.18"
}

assets {
    minifyJs = true
    minifyCss = true
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(GroovyCompile) {
    groovyOptions.encoding = 'UTF-8'
    options.encoding = 'UTF-8'
}

dependencies {
    clover deps.clover
}

sourceCompatibility = '1.8'

clover {
    targetPercentage = '60%'

    compiler {
        encoding = 'UTF-8'
    }

    contexts {
        statement {
            name = 'log'
            regexp = '^.*LOG\\..*'
        }

        method {
            name = 'main'
            regexp = 'public static void main\\(String args\\[\\]\\).*'
        }
        method {
            name = 'getters'
            regexp = 'public [^\\s]+ get[A-Z][^\\s]+\\(\\)'
            maxStatements = 1
        }
        method {
            name = 'setters'
            regexp = 'public void set[A-Z][^\\s]+\\(.+\\)'
            maxStatements = 1
        }
    }

    report {
        json = true
        html = true
        pdf = true
        filter = 'log,main,getters,setters'
        testResultsDir = project.tasks.getByName('test').reports.junitXml.destination
        testResultsInclude = 'TEST-*.xml'
    }
}
